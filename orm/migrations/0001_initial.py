# Generated by Django 5.0.7 on 2024-09-03 08:33

import ckeditor.fields
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('field', models.CharField(max_length=100)),
                ('repetition_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semiannual', 'Semi-Annual'), ('annual', 'Annual')], max_length=20)),
                ('current_value', models.FloatField()),
                ('reporting_date', models.DateField()),
                ('next_reporting_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('url', models.URLField(blank=True, null=True)),
                ('department', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='IndicatorValueHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='value_history', to='orm.indicator')),
            ],
        ),
        migrations.CreateModel(
            name='Mitigation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('effectiveness', models.CharField(choices=[('not_tested', 'Not Tested'), ('ineffective', 'Ineffective'), ('partially_effective', 'Partially Effective'), ('effective', 'Effective')], default='not_tested', max_length=50)),
                ('portfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orm.portfolio')),
            ],
        ),
        migrations.AddField(
            model_name='indicator',
            name='portfolio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orm.portfolio'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('date', models.DateField()),
                ('portfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orm.portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('deadline', models.DateField(blank=True, null=True)),
                ('portfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orm.portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_assessed_date', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('inherent_likelihood', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=5, null=True)),
                ('inherent_impact', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=5, null=True)),
                ('residual_likelihood', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=3, null=True)),
                ('residual_impact', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=3, null=True)),
                ('targeted_likelihood', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1, null=True)),
                ('targeted_impact', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1, null=True)),
                ('treatment_type', models.CharField(blank=True, choices=[('acceptance', 'Acceptance'), ('mitigation', 'Mitigation'), ('transfer', 'Transfer'), ('avoidance', 'Avoidance')], default='mitigation', max_length=50, null=True)),
                ('actions', models.ManyToManyField(blank=True, related_name='risks', to='orm.action')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orm.category')),
                ('events', models.ManyToManyField(blank=True, related_name='risks', to='orm.event')),
                ('indicators', models.ManyToManyField(blank=True, related_name='risks', to='orm.indicator')),
                ('mitigations', models.ManyToManyField(blank=True, related_name='risks', to='orm.mitigation')),
                ('portfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orm.portfolio')),
                ('procedures', models.ManyToManyField(blank=True, related_name='risks', to='orm.procedure')),
            ],
            options={
                'permissions': [('view_risk_report', 'Can view the risk report')],
            },
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assessed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('risks', models.ManyToManyField(related_name='assessments', to='orm.risk')),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('risk_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_history', to='orm.riskassessment')),
            ],
        ),
        migrations.CreateModel(
            name='RiskScoreHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_type', models.CharField(max_length=50)),
                ('score', models.IntegerField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_history', to='orm.risk')),
            ],
        ),
        migrations.CreateModel(
            name='RiskSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('inherent_score', models.IntegerField()),
                ('residual_score', models.IntegerField()),
                ('targeted_score', models.IntegerField()),
                ('assessment_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_snapshots', to='orm.assessmenthistory')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=50)),
                ('portfolios', models.ManyToManyField(related_name='user_profiles', to='orm.portfolio')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='riskassessment',
            name='assessor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assessments', to='orm.userprofile'),
        ),
        migrations.AddField(
            model_name='riskassessment',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_assessments', to='orm.userprofile'),
        ),
        migrations.AddField(
            model_name='risk',
            name='last_assessed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_assessed_risks', to='orm.userprofile'),
        ),
        migrations.AddField(
            model_name='risk',
            name='owners',
            field=models.ManyToManyField(related_name='owned_risks', to='orm.userprofile'),
        ),
        migrations.AddField(
            model_name='procedure',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_procedures', to='orm.userprofile'),
        ),
        migrations.AddField(
            model_name='mitigation',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_mitigations', to='orm.userprofile'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_indicators', to='orm.userprofile'),
        ),
        migrations.AddField(
            model_name='event',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_events', to='orm.userprofile'),
        ),
        migrations.AddField(
            model_name='event',
            name='reporter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_events', to='orm.userprofile'),
        ),
        migrations.AddField(
            model_name='assessmenthistory',
            name='assessor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='orm.userprofile'),
        ),
        migrations.CreateModel(
            name='ApprovalRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], max_length=50)),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('risk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approval_requests', to='orm.risk')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orm.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='action',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_actions', to='orm.userprofile'),
        ),
        migrations.AddField(
            model_name='action',
            name='performer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_actions', to='orm.userprofile'),
        ),
    ]
